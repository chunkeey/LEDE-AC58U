From johannes@sipsolutions.net Mon Oct 16 09:17:51 2017
Return-Path: <linux-wireless-owner@vger.kernel.org>
Received: from debian64.daheim ([unix socket])
	 by debian64 (Cyrus 2.5.10-Debian-2.5.10-3+b1) with LMTPA;
	 Mon, 16 Oct 2017 18:29:02 +0200
X-Sieve: CMU Sieve 2.4
Received: from localhost.daheim ([127.0.0.1] helo=localhost)
	by debian64.daheim with esmtp (Exim 4.89)
	(envelope-from <linux-wireless-owner@vger.kernel.org>)
	id 1e47uH-0005jM-Kn
	for chuck@debian64.daheim; Mon, 16 Oct 2017 18:06:21 +0200
Received: from debian64.daheim ([IPv6:::1])
	by localhost (debian64.daheim [IPv6:::1]) (amavisd-new, port 10024)
	with ESMTP id Kp3oYaBvc4SL for <chuck@debian64.daheim>;
	Mon, 16 Oct 2017 18:06:21 +0200 (CEST)
Received: from localhost.daheim ([127.0.0.1] helo=debian64.daheim)
	by debian64.daheim with esmtp (Exim 4.89)
	(envelope-from <linux-wireless-owner@vger.kernel.org>)
	id 1e47oP-0002oV-Hl
	for chuck@debian64.daheim; Mon, 16 Oct 2017 18:00:17 +0200
Delivered-To: chunkeey@gmail.com
Received: from gmail-pop.l.google.com [2a00:1450:400c:c09::6d]
	by debian64.daheim with POP3 (fetchmail-6.3.26)
	for <chuck@debian64.daheim> (single-drop); Mon, 16 Oct 2017 18:00:17 +0200 (CEST)
Received: by 10.28.99.137 with SMTP id x131csp3194099wmb;
        Mon, 16 Oct 2017 02:18:13 -0700 (PDT)
X-Google-Smtp-Source: AOwi7QA9AiU82wlR9XUsEVfh7UiIJkX2zXGhY/RH7YJIkuOQ0q37T1kvNQH4/KFkTJomHwsEzEXH
X-Received: by 10.99.121.9 with SMTP id u9mr7626954pgc.37.1508145492979;
        Mon, 16 Oct 2017 02:18:12 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1508145492; cv=none;
        d=google.com; s=arc-20160816;
        b=N+8qc7kbyrytQvik3rgapk48IgXJIzzweqY6wxtLPYL8JUppKtU2hMZRASwu43OJ3H
         vC9f+6MnWwuRXkE53NVNP7LiTcfFMhfsMby166eY2N5h2pR70Bz/kEHw/Igl5hJRMGkA
         alYjeOJiXCB/lZAGXuO9QJZiO+EfVutluRcmy/Z9rbNIWFEI+Zih0czSS8rW72sjHhQW
         WpZbTqo0p/M2xVsgKK7WKWnAIuHyNkzH+Ukdq9b+iMtQ9hofi/GD6sAVzW5V+EAluZI6
         nLP66pkUvnx+TS+mEgwb6CPc+t7tnr1FELqJnesYSNmO3CQeaiO4mSzjMGgXfPfCl5PS
         RF2w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from
         :arc-authentication-results;
        bh=fyvh4xw8QBz8Un0KNjlPvv3ZR9A6w1U3MrGU067I06g=;
        b=f+6HoNXmBoFsrpsF72CX3fgbpelFRjK/T5y1mliUoD0KMqmPYhMli/s5+FS0cYHCyG
         lZyLtdBjVXKuQw5TrS69YYiTG7aBYPHRdbLCJI3TINN4E8AXZBVcDajnprRRe8N92wH2
         ItTd6zJOlWQBMdDy5iDavc+siSkGBysbYB6vxuXiO3Z3hFD7WFVRg/YU7o2nLX4/PgtX
         U/OqvkH2pKoXvZtyq5HkLGZ99F2FcEcxAVZFEDJQbetNjSMGvJlDLGVNHbJXV7cWprv9
         tCmRIHx+zm+WNX7mYPSPqXukHG2wQ9kCXMGIKwNbSZcKn6gxl+llC1McVITgRjdw3lmx
         zlHg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-wireless-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-wireless-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id k63si3841640pge.222.2017.10.16.02.18.07;
        Mon, 16 Oct 2017 02:18:12 -0700 (PDT)
Received-SPF: pass (google.com: best guess record for domain of linux-wireless-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Authentication-Results: mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-wireless-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-wireless-owner@vger.kernel.org
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1751953AbdJPJRz (ORCPT <rfc822;robert.felten@googlemail.com>
        + 19 others); Mon, 16 Oct 2017 05:17:55 -0400
Received: from s3.sipsolutions.net ([144.76.63.242]:41918 "EHLO
        sipsolutions.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1751872AbdJPJRy (ORCPT
        <rfc822;linux-wireless@vger.kernel.org>);
        Mon, 16 Oct 2017 05:17:54 -0400
Received: by sipsolutions.net with esmtpsa (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128)
        (Exim 4.89)
        (envelope-from <johannes@sipsolutions.net>)
        id 1e41Wy-00033B-Ia; Mon, 16 Oct 2017 11:17:52 +0200
From:   Johannes Berg <johannes@sipsolutions.net>
To:     linux-wireless@vger.kernel.org
Cc:     j@w1.fi, Johannes Berg <johannes.berg@intel.com>
Subject: [PATCH] mac80211: accept key reinstall without changing anything
Date:   Mon, 16 Oct 2017 11:17:51 +0200
Message-Id: <20171016091751.17989-1-johannes@sipsolutions.net>
X-Mailer: git-send-email 2.14.2
Sender: linux-wireless-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-wireless.vger.kernel.org>
X-Mailing-List: linux-wireless@vger.kernel.org

From: Johannes Berg <johannes.berg@intel.com>

When a key is reinstalled we can reset the replay counters
etc. which can lead to nonce reuse and/or replay detection
being impossible, breaking security properties, as described
in the "KRACK attacks".

In particular, CVE-2017-13080 applies to GTK rekeying that
happened in firmware while the host is in D3, with the second
part of the attack being done after the host wakes up. In
this case, the wpa_supplicant mitigation isn't sufficient
since wpa_supplicant doesn't know the GTK material.

In case this happens, simply silently accept the new key
coming from userspace but don't take any action on it since
it's the same key; this keeps the PN counter intact.

Signed-off-by: Johannes Berg <johannes.berg@intel.com>
---
 net/mac80211/key.c | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/net/mac80211/key.c b/net/mac80211/key.c
index a98fc2b5e0dc..ae995c8480db 100644
--- a/net/mac80211/key.c
+++ b/net/mac80211/key.c
@@ -4,7 +4,7 @@
  * Copyright 2006-2007	Jiri Benc <jbenc@suse.cz>
  * Copyright 2007-2008	Johannes Berg <johannes@sipsolutions.net>
  * Copyright 2013-2014  Intel Mobile Communications GmbH
- * Copyright 2015	Intel Deutschland GmbH
+ * Copyright 2015-2017	Intel Deutschland GmbH
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 as
@@ -620,9 +620,6 @@ int ieee80211_key_link(struct ieee80211_key *key,
 
 	pairwise = key->conf.flags & IEEE80211_KEY_FLAG_PAIRWISE;
 	idx = key->conf.keyidx;
-	key->local = sdata->local;
-	key->sdata = sdata;
-	key->sta = sta;
 
 	mutex_lock(&sdata->local->key_mtx);
 
@@ -633,6 +630,21 @@ int ieee80211_key_link(struct ieee80211_key *key,
 	else
 		old_key = key_mtx_dereference(sdata->local, sdata->keys[idx]);
 
+	/*
+	 * Silently accept key re-installation without really installing the
+	 * new version of the key to avoid nonce reuse or replay issues.
+	 */
+	if (old_key && key->conf.keylen == old_key->conf.keylen &&
+	    !memcmp(key->conf.key, old_key->conf.key, key->conf.keylen)) {
+		ieee80211_key_free_unused(key);
+		ret = 0;
+		goto out;
+	}
+
+	key->local = sdata->local;
+	key->sdata = sdata;
+	key->sta = sta;
+
 	increment_tailroom_need_count(sdata);
 
 	ieee80211_key_replace(sdata, sta, pairwise, old_key, key);
@@ -648,6 +660,7 @@ int ieee80211_key_link(struct ieee80211_key *key,
 		ret = 0;
 	}
 
+ out:
 	mutex_unlock(&sdata->local->key_mtx);
 
 	return ret;
-- 
2.14.2


